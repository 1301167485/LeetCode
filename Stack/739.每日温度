1.题目描述：https://leetcode-cn.com/problems/daily-temperatures/

  请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。

  例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。

  提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。
  
2.思路1（暴力求解）：略

3.思路2（单调栈）：
  1）维持一个自底向上递减的栈；
  2）遍历数组中的元素，
  3）如果栈为空则元素下标直接入栈；
  4）栈不空，则比较当前元素与与栈顶元素大小；
  6）如果当前元素小于或等于栈顶元素，直接入栈元素下标
  5）当前元素大于栈顶元素，则表明当前元素就是栈顶元素最近的那个更高的气温，则得到栈顶元素要的结果，stack.pop
  6）重复步骤4，直到栈为空或者栈顶元素大于当前元素
  
  实例：如官方解答中的举例，思路一目了然。
  
4.代码：
   public int[] dailyTemperatures(int[] T) {
        Stack<Integer> stack = new Stack<>();
        int len = T.length;
        int[] array = new int[len];
        for(int i = 0; i < len; i++){
            if(!stack.isEmpty()){
                if(T[stack.peek()] >= T[i]) stack.push(i);
                else{
                    while(!stack.isEmpty() && T[stack.peek()] < T[i]){
                        array[stack.peek()] = i - stack.peek();
                        stack.pop();
                    }
                    stack.push(i);
                }
            }
            else stack.push(i);
        }
        return array;
    }
