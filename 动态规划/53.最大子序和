1.题目描述：https://leetcode-cn.com/problems/maximum-subarray/
  给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

  示例:

  输入: [-2,1,-3,4,-1,2,1,-5,4]
  输出: 6
  解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。


2.思路:
  1）我们在讨论最大子序时，该子序必定是以某个元素结尾的，不妨设dp[i]为第i个元素结尾的最大子序和
  2）接下来考虑转移方程，即dp[i]取决于什么？
  3）dp[i] = max( dp[i-1] + nums[i], nums[i])
  4）即dp[i]取决于dp[i-1]和当前元素
  
3.代码：
  public int maxSubArray(int[] nums) {
        int len = nums.length;
        if(len == 0) return 0;
        int max = nums[0];
        int dp = nums[0];
        for(int i = 1; i < len; i++){
            dp = Math.max(dp+nums[i],nums[i]);
            max = Math.max(dp,max);
        }
        return max;
