1.问题：给定一个二叉树，返回它的 前序 遍历。

   示例:

  输入: [1,null,2,3]  
     1
      \
       2
      /
     3 

  输出: [1,2,3]
  
 2.思路:第一次遇到这个结点就访问它
 
 3.代码：（因为建立的set、stack、list，空间复杂度太高，下次复习的时候想想其他办法）
  public List<Integer> preorderTraversal(TreeNode root) {
          Stack<TreeNode> stack = new Stack<>();
          Set<TreeNode> set = new HashSet<>();
          List<Integer> list = new ArrayList<>();
          if (root != null) {
              stack.push(root);
              while (!stack.isEmpty()) {
                  TreeNode node = stack.pop();
                  if(!set.contains(node)) {
                      list.add(node.data);
                      set.add(node);
                  }
                  if(node.right!=null) stack.push(node.right);
                  if(node.left!=null) stack.push(node.left);
              }
          }
          return list;
      }
