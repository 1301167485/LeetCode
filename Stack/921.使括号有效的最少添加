题目：给定一个由 '(' 和 ')' 括号组成的字符串 S，我们需要添加最少的括号（ '(' 或是 ')'，可以在任何位置），以使得到的括号字符串有效。

从形式上讲，只有满足下面几点之一，括号字符串才是有效的：
  它是一个空字符串，或者
  它可以被写成 AB （A 与 B 连接）, 其中 A 和 B 都是有效字符串，或者
  它可以被写作 (A)，其中 A 是有效字符串。
  给定一个括号字符串，返回为使结果字符串有效而必须添加的最少括号数。

示例 1：

  输入："())"
  输出：1
  示例 2：

  输入："((("
  输出：3
  示例 3：

  输入："()"
  输出：0
  示例 4：

  输入："()))(("
  输出：4


  提示：

  S.length <= 1000
  S 只包含 '(' 和 ')' 字符。
 

2.思路：字符串从左往右遍历，如果首先遇到‘）’（即没有左括号与它进行匹配，说明这个时候一定需要一个左括号，此时max++）；如果遇到‘（’，则继续往后遍历看看有没有‘）’与它匹配；如果
最后只剩‘（’，那么有多少个就 max + 多少。
  1）遇到（ 就压栈
  2）遇到右括号，首先判断stack是否为空，如果为空，max++ （对应上述第一种情况）；不为空则pop出一个‘（’表示匹配了一对
  3）遍历完后栈中还剩多少个‘（’就max + stack.size

3.代码：（几分钟就写出来了哈哈哈还以为会报错，结果运行正确hhh）
public int minAddToMakeValid(String S) {
        int max =0;
        Stack<Character> stack = new Stack<>();
        for (char c : S.toCharArray()) {
            if(c == ')'){
                if (stack.isEmpty()) max++;
                else stack.pop();
            }
            else stack.push(c);
        }
        return max += stack.size();
    }
