1.题目:给你一个整数数组 nums 。

如果一组数字 (i,j) 满足 nums[i] == nums[j] 且 i < j ，就可以认为这是一组 好数对 。

返回好数对的数目。

示例 1：

输入：nums = [1,2,3,1,1,3]
输出：4
解释：有 4 组好数对，分别是 (0,3), (0,4), (3,4), (2,5) ，下标从 0 开始
示例 2：

输入：nums = [1,1,1,1]
输出：6
解释：数组中的每组数字都是好数对
示例 3：

输入：nums = [1,2,3]
输出：0
 
提示：

1 <= nums.length <= 100
1 <= nums[i] <= 100

2.思路:
  1)利用数组链表，索引为当前数值，链表为该值的结点（如索引为4，表示nums中值为4的所有结点）
  2）实际中利用map更方便，key为nums的值，value为个数
  3）map中包含就value++，不包含就map.put,初始value为1
  4）最后一次计算每个value的值，（如key=4，value=6，表明nums中值为4的一共有6个，那么满足要求的好数对一共有6*5/2=15对）
  
3.代码：
 public int numIdenticalPairs(int[] nums) {
        Map<Integer,Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            if(map.containsKey(nums[i])) {
                int temp = map.get(nums[i]);
                map.put(nums[i],++temp);
            }
            else map.put(nums[i],1);
        }
        int max = 0;
        for (Integer value : map.values()) {
            if(value!=1){
                int temp = (value*(value-1)/2);
                max += temp;
            }
        }
        return max;

    }
