1.题目描述：https://leetcode-cn.com/problems/unique-binary-search-trees/
  给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？

  示例:

  输入: 3
  输出: 5
  解释:
  给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

     1         3     3      2      1
      \       /     /      / \      \
       3     2     1      1   3      2
      /     /       \                 \
     2     1         2                 3
     
2.思路:动态规划
  1）设G(n)表示n个结点共多少种二叉树
  2）设f(i)表示当以i为根节点时共多少中二叉树
  3）则G(n) = f(1) + f(2) + f(3) + .... f(n)
  4) 因为是二叉排序树，当以i为根节点时，左子树共有i-1个结点，右子树有n-i个结点
  5）所以f(i) = G(i-1) * G(n-i)
  6）G(n) = f(1) + f(2) + f(3) + .... f(n) = G(0)*G(n-1) + G(1)*G(n-2) + .... G(n-1)*G(0)   ==》 卡特兰数公式
  7）初始化G(0) = 1; G(1) = 1

3.代码：
      public int numTrees(int n) {
        if(n < 2) return 1;
        int[] dp = new int[n+1];
        dp[0] = 1;
        dp[1] = 1;
        for(int i = 2; i <= n; i++){
            for(int j = 1; j <= i; j++){
                dp[i] += dp[j-1]*dp[i-j];
            }
        }
        return dp[n]; 

    }
