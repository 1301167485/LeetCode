1.题目: 
  n 名士兵站成一排。每个士兵都有一个 独一无二 的评分 rating 。

  每 3 个士兵可以组成一个作战单位，分组规则如下：

  从队伍中选出下标分别为 i、j、k 的 3 名士兵，他们的评分分别为 rating[i]、rating[j]、rating[k]
  作战单位需满足： rating[i] < rating[j] < rating[k] 或者 rating[i] > rating[j] > rating[k] ，其中  0 <= i < j < k < n
  请你返回按上述条件可以组建的作战单位数量。每个士兵都可以是多个作战单位的一部分。



  示例 1：

  输入：rating = [2,5,3,4,1]
  输出：3
  解释：我们可以组建三个作战单位 (2,3,4)、(5,4,1)、(5,3,1) 。
  示例 2：

  输入：rating = [2,1,3]
  输出：0
  解释：根据题目条件，我们无法组建作战单位。
  示例 3：

  输入：rating = [1,2,3,4]
  输出：4


  提示：

  n == rating.length
  1 <= n <= 200
  1 <= rating[i] <= 10^5
 
2.思路1:暴力求解，三层for循环。
思路2：枚举中间节点j，对于每一个中间节点j，只需要找到左边比节点j小的元素个数，和右边比j大的元素个数。

3.代码1
   public static int numTeams(int[] rating) {
        int sum = 0;
        for (int i = 0; i < rating.length-2; i++) {
            for (int j = i+1; j < rating.length-1; j++) {
                for (int k = j+1; k < rating.length; k++) {
                    if(rating[i]>rating[j] && rating[j]>rating[k]) sum++;
                    else if(rating[i]<rating[j] && rating[j]<rating[k]) sum++;
                }
            }
        }
        return sum;
    }
  4. 代码2：
  class Solution {
    public int numTeams(int[] rating) {
        int len = rating.length;
        int res = 0;
        for(int i = 1; i < len - 1; i++){
            int left1 = 0;// 左边小 
            int left2 = 0;// 左边大
            int right1 = 0;// 右边大
            int right2 = 0;// 左边小
            int temp = rating[i];
            for(int j = 0; j < i; j++){
                if(temp > rating[j]) left1++;
                else if(temp < rating[j]) left2++;
            }
            for(int j = i + 1; j < len; j++){
                if(temp < rating[j]) right1++;
                else if(temp > rating[j]) right2++;
            }
            res += left1 * right1;
            res += left2 * right2;
            
        }
        return res;

    }
